{"ast":null,"code":"var _jsxFileName = \"/home/bap/Desktop/chatdemo/chat/src/App.js\";\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { routes } from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const renderPage = list => {\n    let xhtml = null;\n\n    if (list.length >= 0) {\n      xhtml = list.map(page => {\n        return /*#__PURE__*/_jsxDEV(Route, { ...page\n        }, page.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 16\n        }, this);\n      });\n    }\n\n    ;\n    return xhtml;\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: renderPage(routes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bap/Desktop/chatdemo/chat/src/App.js"],"names":["BrowserRouter","Switch","Route","routes","App","renderPage","list","xhtml","length","map","page","name"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAKD,IAAI,CAACE,MAAL,IAAe,CAApB,EAAwB;AACtBD,MAAAA,KAAK,GAAGD,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AACzB,4BAAO,QAAC,KAAD,OAA2BA;AAA3B,WAAYA,IAAI,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFO,CAAR;AAGD;;AAAA;AACD,WAAOJ,KAAP;AACD,GARD;;AAYA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,gBACGF,UAAU,CAACF,MAAD;AADb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KArBQC,G;AAuBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { routes } from \"./routes\"\n\nfunction App() {\n\n  const renderPage = (list) => {\n    let xhtml = null;\n    if ( list.length >= 0 ) {\n      xhtml = list.map((page) => {\n        return <Route key={page.name} {...page} />\n      })\n    };\n    return xhtml;\n  }\n\n\n  \n  return (\n    <BrowserRouter>\n      <Switch>\n        {renderPage(routes)}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}