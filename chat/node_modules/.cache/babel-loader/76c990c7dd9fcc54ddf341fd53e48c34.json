{"ast":null,"code":"var _jsxFileName = \"/home/bap/Desktop/demoSocket/chat/src/Component/pageChat/PageChat.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoRoom from './InfoRoom/InfoRoom';\nimport ContentChat from './ContentChat/ContentChat';\nimport queryString from \"query-string\";\nimport { useHistory } from 'react-router-dom';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  pageChat: {\n    height: \"100vh\"\n  }\n}));\nconst socket = io(\"http://localhost:8000\");\n\nfunction PageChat({\n  location\n}) {\n  _s();\n\n  const [name, setName] = React.useState(\"\");\n  const [room, setRoom] = React.useState(\"\");\n  const [message, setMessage] = React.useState([]);\n  const classes = useStyles();\n  const history = useHistory();\n  React.useEffect(() => {\n    const data = queryString.parse(location.search);\n    socket.on(\"message\", payload => {\n      setMessage([...message, payload]);\n      console.log(payload);\n    });\n\n    if (location.search) {\n      setName(data.name);\n      setRoom(data.room);\n    } else {\n      history.push(\"/\");\n    }\n\n    return () => {\n      socket.off();\n      socket.emit(\"disconnect\");\n    };\n  }, [location.search, history, name, room, message]);\n\n  const sendMessageRealTime = message => {\n    socket.emit(\"message\", {\n      message,\n      name\n    });\n    console.log(message, name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.pageChat,\n    children: [/*#__PURE__*/_jsxDEV(InfoRoom, {\n      name: name,\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentChat, {\n      sendMessageRealTime: sendMessageRealTime,\n      message: message,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PageChat, \"Y53H8YvsPMc9wGrqooBEc6a2iB4=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = PageChat;\nexport default PageChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageChat\");","map":{"version":3,"sources":["/home/bap/Desktop/demoSocket/chat/src/Component/pageChat/PageChat.js"],"names":["React","Grid","makeStyles","InfoRoom","ContentChat","queryString","useHistory","io","useStyles","pageChat","height","socket","PageChat","location","name","setName","useState","room","setRoom","message","setMessage","classes","history","useEffect","data","parse","search","on","payload","console","log","push","off","emit","sendMessageRealTime"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC,OAAO;AAChCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE;AADF;AADsB,CAAP,CAAD,CAA5B;AAMA,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAD,CAAjB;;AAEA,SAASK,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBpB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAA9B;AACA,QAAMK,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,OAAO,GAAGhB,UAAU,EAA1B;AAGAN,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AAClB,UAAMC,IAAI,GAAGnB,WAAW,CAACoB,KAAZ,CAAkBZ,QAAQ,CAACa,MAA3B,CAAb;AACAf,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqBC,OAAO,IAAI;AAC5BR,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaS,OAAb,CAAD,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,KAHD;;AAKA,QAAIf,QAAQ,CAACa,MAAb,EAAqB;AACjBX,MAAAA,OAAO,CAACS,IAAI,CAACV,IAAN,CAAP;AACAI,MAAAA,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP;AACH,KAHD,MAGO;AACHK,MAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACH;;AACD,WAAO,MAAM;AACTpB,MAAAA,MAAM,CAACqB,GAAP;AACArB,MAAAA,MAAM,CAACsB,IAAP,CAAY,YAAZ;AACH,KAHD;AAIH,GAjBD,EAiBG,CAACpB,QAAQ,CAACa,MAAV,EAAkBJ,OAAlB,EAA2BR,IAA3B,EAAiCG,IAAjC,EAAuCE,OAAvC,CAjBH;;AAmBA,QAAMe,mBAAmB,GAAIf,OAAD,IAAa;AACrCR,IAAAA,MAAM,CAACsB,IAAP,CAAY,SAAZ,EAAuB;AAAEd,MAAAA,OAAF;AAAWL,MAAAA;AAAX,KAAvB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ,EAAqBL,IAArB;AACH,GAHD;;AAKA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEO,OAAO,CAACZ,QAAnC;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEK,IAAhB;AAAsB,MAAA,IAAI,EAAEG;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AACI,MAAA,mBAAmB,EAAEiB,mBADzB;AAEI,MAAA,OAAO,EAAEf,OAFb;AAGI,MAAA,IAAI,EAAGL;AAHX;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA1CQF,Q;UAIWJ,S,EACAF,U;;;KALXM,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoRoom from './InfoRoom/InfoRoom';\nimport ContentChat from './ContentChat/ContentChat';\nimport queryString from \"query-string\"\nimport { useHistory } from 'react-router-dom';\nimport io from \"socket.io-client\"\n\nconst useStyles = makeStyles(() => ({\n    pageChat: {\n        height: \"100vh\"\n    },\n}));\n\nconst socket = io(\"http://localhost:8000\")\n\nfunction PageChat({ location }) {\n    const [name, setName] = React.useState(\"\");\n    const [room, setRoom] = React.useState(\"\");\n    const [message, setMessage] = React.useState([])\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    React.useEffect(() => {\n        const data = queryString.parse(location.search);\n        socket.on(\"message\", payload => {\n            setMessage([...message, payload])\n            console.log(payload);\n        })\n\n        if (location.search) {\n            setName(data.name);\n            setRoom(data.room);\n        } else {\n            history.push(\"/\")\n        }\n        return () => {\n            socket.off()\n            socket.emit(\"disconnect\")\n        }\n    }, [location.search, history, name, room, message])\n\n    const sendMessageRealTime = (message) => {\n        socket.emit(\"message\", { message, name });\n        console.log(message, name);\n    }\n\n    return (\n        <Grid container className={classes.pageChat}>\n            <InfoRoom name={name} room={room} />\n            <ContentChat\n                sendMessageRealTime={sendMessageRealTime}\n                message={message}\n                name= {name}\n            />\n        </Grid>\n    );\n}\n\nexport default PageChat;"]},"metadata":{},"sourceType":"module"}