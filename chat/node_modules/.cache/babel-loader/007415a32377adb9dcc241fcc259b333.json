{"ast":null,"code":"var _jsxFileName = \"/home/bap/Desktop/demoSocket/chat/src/Component/pageChat/PageChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormChat from './FormChat/FormChat';\nimport ContentChat from './ContentChat/ContentChat';\nimport queryString from \"query-string\";\nimport { useHistory } from 'react-router-dom';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageChat({\n  location\n}) {\n  _s();\n\n  const [name, setName] = React.useState(\"\");\n  const [room, setRoom] = React.useState(\"\");\n  const history = useHistory();\n  const socketRef = useRef();\n  React.useEffect(() => {\n    const data = queryString.parse(location.search);\n\n    if (location.search) {\n      setName(data.user);\n      setRoom(data.room);\n      socketRef.current = io.connect(\"/\"); // socketRef.current.on(\"your Id\", id => {})\n    } else {\n      history.push(\"/\");\n    }\n\n    return () => {};\n  }, [location.search, history, name, room]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(FormChat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContentChat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PageChat, \"94XSflkw8tHnVj9KNq9Vck35snA=\", false, function () {\n  return [useHistory];\n});\n\n_c = PageChat;\nexport default PageChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageChat\");","map":{"version":3,"sources":["/home/bap/Desktop/demoSocket/chat/src/Component/pageChat/PageChat.js"],"names":["React","useRef","Grid","FormChat","ContentChat","queryString","useHistory","io","PageChat","location","name","setName","useState","room","setRoom","history","socketRef","useEffect","data","parse","search","user","current","connect","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACY,QAAN,CAAe,EAAf,CAAxB;AACA,QAAMG,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,SAAS,GAAGf,MAAM,EAAxB;AAGAD,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,UAAMC,IAAI,GAAGb,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAb;;AACA,QAAKX,QAAQ,CAACW,MAAd,EAAuB;AACnBT,MAAAA,OAAO,CAACO,IAAI,CAACG,IAAN,CAAP;AACAP,MAAAA,OAAO,CAACI,IAAI,CAACL,IAAN,CAAP;AACAG,MAAAA,SAAS,CAACM,OAAV,GAAoBf,EAAE,CAACgB,OAAH,CAAW,GAAX,CAApB,CAHmB,CAInB;AACH,KALD,MAKO;AACHR,MAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACH;;AACD,WAAO,MAAM,CAEZ,CAFD;AAGH,GAbD,EAaG,CAACf,QAAQ,CAACW,MAAV,EAAkBL,OAAlB,EAA2BL,IAA3B,EAAiCG,IAAjC,CAbH;AAeA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,4BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA5BQL,Q;UAGWF,U;;;KAHXE,Q;AA8BT,eAAeA,QAAf","sourcesContent":["import React, { useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport FormChat from './FormChat/FormChat';\nimport ContentChat from './ContentChat/ContentChat';\nimport queryString from \"query-string\"\nimport { useHistory } from 'react-router-dom';\nimport io from \"socket.io-client\"\n\nfunction PageChat({ location }) {\n    const [name, setName] = React.useState(\"\");\n    const [room, setRoom] = React.useState(\"\");\n    const history = useHistory();\n    const socketRef = useRef()\n\n\n    React.useEffect(() => {\n        const data = queryString.parse(location.search);\n        if ( location.search ) {\n            setName(data.user);\n            setRoom(data.room);\n            socketRef.current = io.connect(\"/\");\n            // socketRef.current.on(\"your Id\", id => {})\n        } else {\n            history.push(\"/\")\n        }\n        return () => {\n\n        }\n    }, [location.search, history, name, room])\n\n    return (\n        <Grid container spacing={3}>\n            <FormChat />\n            <ContentChat />\n        </Grid>\n    );\n}\n\nexport default PageChat;"]},"metadata":{},"sourceType":"module"}